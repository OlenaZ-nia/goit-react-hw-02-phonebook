{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactElement/ContactElement.module.css","components/ContactList/ContactList.module.css","components/SearchFilter/SearchFilter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactElement/ContactElement.js","components/ContactList/ContactList.js","components/SearchFilter/SearchFilter.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","nanoid","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","target","value","handleClick","this","form","label","input","type","pattern","title","required","onChange","id","btnAddContact","btnText","Component","ContactElement","onDeleteContact","contact","tel","btn","onClick","ContactList","contacts","list","map","item","SearchFilter","searchInput","autoComplete","placeholder","App","filter","addContact","includeName","find","undefined","alert","console","log","getExistsContact","normalizedFilter","toLowerCase","includes","deleteContact","nameId","prevState","existsContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2384a47c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3RitC\",\"label\":\"ContactForm_label__2mBE3\",\"input\":\"ContactForm_input__jR8pg\",\"btnAddContact\":\"ContactForm_btnAddContact__rI-BF\",\"btnText\":\"ContactForm_btnText__1kh1o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactElement_contact__1bfcZ\",\"tel\":\"ContactElement_tel__2HqqD\",\"btn\":\"ContactElement_btn__228eJ\",\"btn-animation\":\"ContactElement_btn-animation__1k4OC\",\"ring\":\"ContactElement_ring__1YmHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__11jBo\",\"item\":\"ContactList_item__2RsLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SearchFilter_label__3apP_\",\"searchInput\":\"SearchFilter_searchInput__cSlAl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14Bfb\"};","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nexport const Container = ({children}) => {\r\n    return (\r\n        <div className={s.container}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}","import { Component } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    };\r\n\r\n    nameInputId = nanoid();\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.onSubmit(this.state);\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleClick = () => {\r\n        \r\n     };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n       return (\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n            <label className={s.label}> Name\r\n                <input className={s.input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n                    required\r\n                       onChange={this.handleChange}\r\n                       id={this.nameInputId}\r\n                       value={name}\r\n                />\r\n            </label>\r\n            <label className={s.label}> Namber\r\n                <input className={s.input}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n                    required\r\n                       onChange={this.handleChange}\r\n                       value={number}\r\n                />\r\n            </label>\r\n            <button type=\"submit\" className={s.btnAddContact}>\r\n                <span className={s.btnText}>Add contact</span>\r\n            </button>\r\n            \r\n        </form>\r\n    )\r\n   } \r\n}\r\nexport default ContactForm\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactElement.module.css';\r\n\r\nexport const ContactElement = ({ name, number, id, onDeleteContact }) => {\r\n    return (\r\n        <>\r\n            <p className={s.contact}>{name}: <span className={s.tel}>{number}</span></p>\r\n            <button\r\n                type=\"button\"\r\n                className={s.btn}\r\n                onClick={()=>onDeleteContact(id)}\r\n            >\r\n                Delete\r\n            </button>\r\n        </>\r\n    )\r\n}\r\n\r\nContactElement.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport { ContactElement } from \"../ContactElement/ContactElement\";\r\nimport s from './ContactList.module.css'\r\nexport const ContactList = ({contacts, onDeleteContact}) => {\r\n    return (\r\n        <ul className={s.list}>\r\n            {contacts.map(({id, name, number}) => {\r\n                return (\r\n                    <li className={ s.item} key={id}>\r\n                        <ContactElement\r\n                            name={name}\r\n                            number={number}\r\n                            id={id}\r\n                            onDeleteContact={onDeleteContact}\r\n                        />\r\n                    </li>\r\n                )  \r\n            })}\r\n            \r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }).isRequired,\r\n    )\r\n}","import PropTypes from 'prop-types';\r\nimport s from './SearchFilter.module.css';\r\n\r\nconst SearchFilter = ({value, onChange}) => {\r\n    return (\r\n            <label className={s.label}> Find contacts by name\r\n            <input\r\n                className={s.searchInput}\r\n                type=\"text\"\r\n                name=\"query\"\r\n                value={value}\r\n                autoComplete=\"off\"\r\n                placeholder=\"Search contact\"\r\n                onChange={onChange}\r\n            />\r\n            </label>\r\n        );\r\n}\r\nexport default SearchFilter\r\n\r\nSearchFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Container } from './components/Container/Container';\nimport  ContactForm  from \"./components/ContactForm/ContactForm\";\nimport { ContactList } from './components/ContactList/ContactList';\nimport SearchFilter from './components/SearchFilter/SearchFilter';\n\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component{\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    // const includeName = contacts.find(contact => contact.name.includes(name));\n    const includeName = contacts.find(contact => contact.name === name);\n\n    (includeName !== undefined) ?\n      (alert(`${name} is already in contacts`)\n      ):\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact]\n    }))\n\n  };\n\n  handleChange = (e) => {\n    this.setState({ filter: e.target.value });\n    console.log(this.state.filter)\n  };\n\n  getExistsContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n  };\n\n  deleteContact = (nameId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== nameId),\n    }))\n  };\n  \n  render() {\n    const { filter } = this.state;\n    const existsContacts = this.getExistsContact();\n\n    return (\n      <Container>\n        <h1>Phone</h1>\n        <ContactForm onSubmit={ this.addContact}/>\n        <h2>Contacts</h2>\n        <SearchFilter value={filter} onChange={ this.handleChange}/>\n        <ContactList contacts={existsContacts} onDeleteContact={ this.deleteContact}/>\n      </Container>\n    );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}